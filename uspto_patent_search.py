# -*- coding: utf-8 -*-
"""USPTO Patent Search.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1B2_oBSNT7n0ibz0IM8brNxRTZ1xqpQeP
"""

!pip install textwrap3

import requests
import textwrap3

class PatentSearch:
    def __init__(self):
        self.url = 'https://developer.uspto.gov/ibd-api/v1/application/publications?searchText='

    def wrap(self, string, width):
      if isinstance(string, list):
        return '\n'.join(textwrap3.wrap('\n'.join(string), width))
      else:
        return '\n'.join(textwrap3.wrap(string, width))

    def wrap_abstract(self, string):
        return self.wrap(string, 95)

    def make_api_request(self, input_text):
        sanitized_input = input_text.replace(" ", "%20")
        # response = requests.get(self.url + sanitized_input + "&rows=5")
        response = requests.get(self.url + sanitized_input + "&rows=5", verify=False)

        if response.status_code == 200:
            return response.json()["results"]
        else:
            print(f"Error: {response.status_code}")
            return None

    def search_and_display(self, input_text):
        api_data = self.make_api_request(input_text)

        if api_data:
            for i, result in enumerate(api_data):
                print(f"Invention Title {i + 1}:\n{self.wrap(result['inventionTitle'], 25)}")
                print(f"Inventor Names {i + 1}:\n{self.wrap(result['inventorNameArrayText'], 25)}")
                print(f"Publication Date {i + 1}:\n{result['publicationDate']}")
                print(f"Abstract {i + 1}:\n{self.wrap_abstract(result['abstractText'])}")
                print(f"Patent Application Number {i + 1}:\n{result['patentApplicationNumber']}")
                print("\n" + "-"*30 + "\n")

# Example Usage
patent_search = PatentSearch()
input_text = "coca cola"
patent_search.search_and_display(input_text)

# Example Usage
# trademark_search = TrademarkSearch()
# trademark_search.search_and_display(input_text)